Heroquest-Lua Script Reference

addItem(x,y,name)
  add an item called name to the inventory of the creature standing at (x,y).

addModel(x,y,id)
  add the model with the id id at (x,y).

allowAnotherAction(action)
  allows another action of the type action in the current turn. Action can
  be "attack", "generic" or "spell".

allowSearchAgain(x,y)
  if a room was already searched for treasure, it can be searched again
  when this function is called. (x,y) has to be a field belonging to that room.
  
attack(attack, attype, defend, deftype, sx, sy, tx, ty)
  when attype is "damage", then the creature at (tx,ty) has to defend so many
  points as specified by attack in order to take no damage. If attype is
  "normal", then attack dices are thrown and a maximum of attack attack points
  can be achieved. 
  After the damage is calculated, the attacked creature at (tx,ty) can defend 
  with defend dices; deftype can be "white", "black" or "skull" to specify 
  which symbol counts as defended.
  In (sx,sy) has to be entered the field of the creature that has currently 
  his turn.
  
changeMoney(x,y,amount)
  change the money of the hero standing at (x,y) by amount gold coins. The
  money of the hero can never become negative.

console(text)
  prints text to the console, i.e. to the game-console of the client and
  to stderr in case of the server.

deleteItem(x,y,name)
  deletes one item called name from the inventory of the creature at (x,y).
  Returns true if item name could be deleted, false otherwise.

dice(type, number)
  type can currently only be "normal". Throws number dices and returns that
  many values as result. Can only be used in the server!

enableHeroMonsterCollision(flag)
  if flag is true, then heros and monsters collide with each other. If flag
  is set to false, heros and monsters can pass through each other.

enableWallCollision(flag)
  if flag is true, then creatures collide with walls. If flag is set to false,
  creatures can pass through walls.
  
endGame()
  ends the game.

err(x,y,message)
  sends message to the player that controls creature standing at (x,y). Can
  only be called in the server!

exchangeModel(x,y,fieldidx,modelid)
  replace the fieldidx-th model at field (x,y) with the model that has
  the id modelid.

forceEndTurn()
  forces the player that has his turn to end it, so that the next player gets
  his turn. Can only be called in the client!!

getAdjacentFreeField(x,y)
  searches for a free field that is adjacent to (x,y). Returns (true,s,t) if
  field (s,t) fulfills the requirements, otherwise (false,-1,-1) is returned.

getArmory(x,y,where)
  returns the id of the armory that is worn at the point where. Where can
  be one of the values also allowed in wearArmory. Returns -1 if no
  armory is worn at where.

getCreatureProperty(x,y,prop)
  returns the property of the creature located at (x,y). prop can be 
  "attack", "body", "defense", "id",
  "maxbody", "maxmind", "mind", "move", "name", 
  "player", "sleeping", "type"

getItems(x,y)
  returns the names of the items of a creature's inventory at (x,y) as 
  a table.

getLastWeapon()
  returns the name of the last weapon or spell that was used in an attack

getNumberOfHeros()
  returns the number of heros that are playing in the game.

getVisibleCreatures(x,y)
  returns the positions of the creatures that are visible form (x,y) as
  a table.

isCreatureAt(x,y)
  returns true, if a creature stands at the position (x,y), false
  otherwise.

isMonsterVisible(x,y)
  returns true, if the position (x,y) can be seen by any monster, false 
  otherwise.
  
isVisible(sx,sy,tx,ty)
  returns true, if position (tx,ty) is visible from position (sx,sy) and
  false otherwise.

makeOverlayActive(x,y,flag)
  if flag is true, the overlay at (x,y) is activated. When flag is false,
  it is deactivated.

messageBox(msg)
  displays a standard message box with msg as text.

moveCamera(x,y,z)
  move the camera with the vector (x,y,z).

moveObject(sx,sy,tx,ty,flag)
  move object located at (sx,sy) to (tx,ty). Currently only implemented
  for objects of the size 1x1. If flag is true and the object is a
  creature, than the movement is smoothly interpolated. Otherwise the
  object is just set.
  
openDoor(x,y,dir)
  opens the door located at (x,y) positioned in direction dir. dir can
  be "RIGHT", "BOTTOM", "LEFT" or "TOP".
  
output(one,all)
  shows message one to the currently active player and message all
  to everybody else. All can also be an empty sting.

releaseBackPointer(x,y)
  releases the backpointer of the creature located at (x,y). The backpointer
  points to the last valid field and is set when a creature steps on fields
  that are occupied or contain traps.
  
removeCreature(x,y)
  remove creature located at (x,y) from the world.

removeObject(x,y)
  remove object (not creature) located at (x,y) from the world.
  
setCreatureProperty(x,y,prop,value)
  sets a property of the creature located at (x,y) to value. prop can be 
  "attack", "body", "defense",
  "diceToMove", "maxmind", "mind", "move", 
  "name", "player", "sleeping"
  
setMonster(x,y,name)
  generates and sets a monster called name to the position (x,y).

setMoves(value)
  set the available movement of the creature whose turn it is 
  immedialtely to value.

setScript(x,y,name)
  attaches to the field at (x,y) the script called name. Be careful,
  infinite script loops can be created easily.
  
showRoom(x,y)
  makes the room at (x,y) visible to everybody on the map.
  
takeOff(x,y,armory)
  takes off armory from the creature located at (x,y). Armory remains
  in the inventory of the creature.
  
wearArmory(x,y,armory,where1,where2)
  creature at (x,y) takes on armory at where1 and where2. Where2 can be
  an empty string. Where(1/2) can be 
  "belt", "body", "breast", "head", "left hand", "right hand"
  
winHero(x,y)
  let the hero at (x,y) win the game. It restores also lost points and
  spells and saves the hero. If no hero is left, the game is ended.
